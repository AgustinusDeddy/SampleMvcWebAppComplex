//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(DataLayer.GeneratedEf.AdventureWorksLt2012),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets190a9917a8117d0f1b8dd041671ee6893c617da0cb67660d323847b0530c7ead))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets190a9917a8117d0f1b8dd041671ee6893c617da0cb67660d323847b0530c7ead : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "190a9917a8117d0f1b8dd041671ee6893c617da0cb67660d323847b0530c7ead"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Address")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.CustomerAddress")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Customer")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.SalesOrderHeader")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.SalesOrderDetail")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.Product")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.ProductCategory")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.ProductModel")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.ProductModelProductDescription")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.ProductDescription")
            {
                return GetView9();
            }

            if (extentName == "AdventureWorksLt2012.Addresses")
            {
                return GetView10();
            }

            if (extentName == "AdventureWorksLt2012.CustomerAddresses")
            {
                return GetView11();
            }

            if (extentName == "AdventureWorksLt2012.Customers")
            {
                return GetView12();
            }

            if (extentName == "AdventureWorksLt2012.SalesOrderHeaders")
            {
                return GetView13();
            }

            if (extentName == "AdventureWorksLt2012.SalesOrderDetails")
            {
                return GetView14();
            }

            if (extentName == "AdventureWorksLt2012.Products")
            {
                return GetView15();
            }

            if (extentName == "AdventureWorksLt2012.ProductCategories")
            {
                return GetView16();
            }

            if (extentName == "AdventureWorksLt2012.ProductModels")
            {
                return GetView17();
            }

            if (extentName == "AdventureWorksLt2012.ProductModelProductDescriptions")
            {
                return GetView18();
            }

            if (extentName == "AdventureWorksLt2012.ProductDescriptions")
            {
                return GetView19();
            }

            if (extentName == "CodeFirstDatabase.vGetAllCategory")
            {
                return GetView20();
            }

            if (extentName == "AdventureWorksLt2012.vGetAllCategories")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.vProductAndDescription")
            {
                return GetView22();
            }

            if (extentName == "AdventureWorksLt2012.vProductAndDescriptions")
            {
                return GetView23();
            }

            if (extentName == "CodeFirstDatabase.vProductModelCatalogDescription")
            {
                return GetView24();
            }

            if (extentName == "AdventureWorksLt2012.vProductModelCatalogDescriptions")
            {
                return GetView25();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Address.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Address
        [CodeFirstDatabaseSchema.Address](T1.Address_AddressID, T1.Address_AddressLine1, T1.Address_AddressLine2, T1.Address_City, T1.Address_StateProvince, T1.Address_CountryRegion, T1.Address_PostalCode, T1.Address_rowguid, T1.Address_ModifiedDate)
    FROM (
        SELECT 
            T.AddressID AS Address_AddressID, 
            T.AddressLine1 AS Address_AddressLine1, 
            T.AddressLine2 AS Address_AddressLine2, 
            T.City AS Address_City, 
            T.StateProvince AS Address_StateProvince, 
            T.CountryRegion AS Address_CountryRegion, 
            T.PostalCode AS Address_PostalCode, 
            T.rowguid AS Address_rowguid, 
            T.ModifiedDate AS Address_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.Addresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.CustomerAddress.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerAddress
        [CodeFirstDatabaseSchema.CustomerAddress](T1.CustomerAddress_CustomerID, T1.CustomerAddress_AddressID, T1.CustomerAddress_AddressType, T1.CustomerAddress_rowguid, T1.CustomerAddress_ModifiedDate)
    FROM (
        SELECT 
            T.CustomerID AS CustomerAddress_CustomerID, 
            T.AddressID AS CustomerAddress_AddressID, 
            T.AddressType AS CustomerAddress_AddressType, 
            T.rowguid AS CustomerAddress_rowguid, 
            T.ModifiedDate AS CustomerAddress_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.CustomerAddresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customer
        [CodeFirstDatabaseSchema.Customer](T1.Customer_CustomerID, T1.Customer_NameStyle, T1.Customer_Title, T1.Customer_FirstName, T1.Customer_MiddleName, T1.Customer_LastName, T1.Customer_Suffix, T1.Customer_CompanyName, T1.Customer_SalesPerson, T1.Customer_EmailAddress, T1.Customer_Phone, T1.Customer_PasswordHash, T1.Customer_PasswordSalt, T1.Customer_rowguid, T1.Customer_ModifiedDate)
    FROM (
        SELECT 
            T.CustomerID AS Customer_CustomerID, 
            T.NameStyle AS Customer_NameStyle, 
            T.Title AS Customer_Title, 
            T.FirstName AS Customer_FirstName, 
            T.MiddleName AS Customer_MiddleName, 
            T.LastName AS Customer_LastName, 
            T.Suffix AS Customer_Suffix, 
            T.CompanyName AS Customer_CompanyName, 
            T.SalesPerson AS Customer_SalesPerson, 
            T.EmailAddress AS Customer_EmailAddress, 
            T.Phone AS Customer_Phone, 
            T.PasswordHash AS Customer_PasswordHash, 
            T.PasswordSalt AS Customer_PasswordSalt, 
            T.rowguid AS Customer_rowguid, 
            T.ModifiedDate AS Customer_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.SalesOrderHeader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SalesOrderHeader
        [CodeFirstDatabaseSchema.SalesOrderHeader](T1.SalesOrderHeader_SalesOrderID, T1.SalesOrderHeader_RevisionNumber, T1.SalesOrderHeader_OrderDate, T1.SalesOrderHeader_DueDate, T1.SalesOrderHeader_ShipDate, T1.SalesOrderHeader_Status, T1.SalesOrderHeader_OnlineOrderFlag, T1.SalesOrderHeader_SalesOrderNumber, T1.SalesOrderHeader_PurchaseOrderNumber, T1.SalesOrderHeader_AccountNumber, T1.SalesOrderHeader_CustomerID, T1.SalesOrderHeader_ShipToAddressID, T1.SalesOrderHeader_BillToAddressID, T1.SalesOrderHeader_ShipMethod, T1.SalesOrderHeader_CreditCardApprovalCode, T1.SalesOrderHeader_SubTotal, T1.SalesOrderHeader_TaxAmt, T1.SalesOrderHeader_Freight, T1.SalesOrderHeader_TotalDue, T1.SalesOrderHeader_Comment, T1.SalesOrderHeader_rowguid, T1.SalesOrderHeader_ModifiedDate)
    FROM (
        SELECT 
            T.SalesOrderID AS SalesOrderHeader_SalesOrderID, 
            T.RevisionNumber AS SalesOrderHeader_RevisionNumber, 
            T.OrderDate AS SalesOrderHeader_OrderDate, 
            T.DueDate AS SalesOrderHeader_DueDate, 
            T.ShipDate AS SalesOrderHeader_ShipDate, 
            T.Status AS SalesOrderHeader_Status, 
            T.OnlineOrderFlag AS SalesOrderHeader_OnlineOrderFlag, 
            T.SalesOrderNumber AS SalesOrderHeader_SalesOrderNumber, 
            T.PurchaseOrderNumber AS SalesOrderHeader_PurchaseOrderNumber, 
            T.AccountNumber AS SalesOrderHeader_AccountNumber, 
            T.CustomerID AS SalesOrderHeader_CustomerID, 
            T.ShipToAddressID AS SalesOrderHeader_ShipToAddressID, 
            T.BillToAddressID AS SalesOrderHeader_BillToAddressID, 
            T.ShipMethod AS SalesOrderHeader_ShipMethod, 
            T.CreditCardApprovalCode AS SalesOrderHeader_CreditCardApprovalCode, 
            T.SubTotal AS SalesOrderHeader_SubTotal, 
            T.TaxAmt AS SalesOrderHeader_TaxAmt, 
            T.Freight AS SalesOrderHeader_Freight, 
            T.TotalDue AS SalesOrderHeader_TotalDue, 
            T.Comment AS SalesOrderHeader_Comment, 
            T.rowguid AS SalesOrderHeader_rowguid, 
            T.ModifiedDate AS SalesOrderHeader_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.SalesOrderHeaders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.SalesOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SalesOrderDetail
        [CodeFirstDatabaseSchema.SalesOrderDetail](T1.SalesOrderDetail_SalesOrderID, T1.SalesOrderDetail_SalesOrderDetailID, T1.SalesOrderDetail_OrderQty, T1.SalesOrderDetail_ProductID, T1.SalesOrderDetail_UnitPrice, T1.SalesOrderDetail_UnitPriceDiscount, T1.SalesOrderDetail_LineTotal, T1.SalesOrderDetail_rowguid, T1.SalesOrderDetail_ModifiedDate)
    FROM (
        SELECT 
            T.SalesOrderID AS SalesOrderDetail_SalesOrderID, 
            T.SalesOrderDetailID AS SalesOrderDetail_SalesOrderDetailID, 
            T.OrderQty AS SalesOrderDetail_OrderQty, 
            T.ProductID AS SalesOrderDetail_ProductID, 
            T.UnitPrice AS SalesOrderDetail_UnitPrice, 
            T.UnitPriceDiscount AS SalesOrderDetail_UnitPriceDiscount, 
            T.LineTotal AS SalesOrderDetail_LineTotal, 
            T.rowguid AS SalesOrderDetail_rowguid, 
            T.ModifiedDate AS SalesOrderDetail_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.SalesOrderDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Product
        [CodeFirstDatabaseSchema.Product](T1.Product_ProductID, T1.Product_Name, T1.Product_ProductNumber, T1.Product_Color, T1.Product_StandardCost, T1.Product_ListPrice, T1.Product_Size, T1.Product_Weight, T1.Product_ProductCategoryID, T1.Product_ProductModelID, T1.Product_SellStartDate, T1.Product_SellEndDate, T1.Product_DiscontinuedDate, T1.Product_ThumbNailPhoto, T1.Product_ThumbnailPhotoFileName, T1.Product_rowguid, T1.Product_ModifiedDate)
    FROM (
        SELECT 
            T.ProductID AS Product_ProductID, 
            T.Name AS Product_Name, 
            T.ProductNumber AS Product_ProductNumber, 
            T.Color AS Product_Color, 
            T.StandardCost AS Product_StandardCost, 
            T.ListPrice AS Product_ListPrice, 
            T.Size AS Product_Size, 
            T.Weight AS Product_Weight, 
            T.ProductCategoryID AS Product_ProductCategoryID, 
            T.ProductModelID AS Product_ProductModelID, 
            T.SellStartDate AS Product_SellStartDate, 
            T.SellEndDate AS Product_SellEndDate, 
            T.DiscontinuedDate AS Product_DiscontinuedDate, 
            T.ThumbNailPhoto AS Product_ThumbNailPhoto, 
            T.ThumbnailPhotoFileName AS Product_ThumbnailPhotoFileName, 
            T.rowguid AS Product_rowguid, 
            T.ModifiedDate AS Product_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.Products AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ProductCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductCategory
        [CodeFirstDatabaseSchema.ProductCategory](T1.ProductCategory_ProductCategoryID, T1.ProductCategory_ParentProductCategoryID, T1.ProductCategory_Name, T1.ProductCategory_rowguid, T1.ProductCategory_ModifiedDate)
    FROM (
        SELECT 
            T.ProductCategoryID AS ProductCategory_ProductCategoryID, 
            T.ParentProductCategoryID AS ProductCategory_ParentProductCategoryID, 
            T.Name AS ProductCategory_Name, 
            T.rowguid AS ProductCategory_rowguid, 
            T.ModifiedDate AS ProductCategory_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.ProductCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ProductModel.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductModel
        [CodeFirstDatabaseSchema.ProductModel](T1.ProductModel_ProductModelID, T1.ProductModel_Name, T1.ProductModel_CatalogDescription, T1.ProductModel_rowguid, T1.ProductModel_ModifiedDate)
    FROM (
        SELECT 
            T.ProductModelID AS ProductModel_ProductModelID, 
            T.Name AS ProductModel_Name, 
            T.CatalogDescription AS ProductModel_CatalogDescription, 
            T.rowguid AS ProductModel_rowguid, 
            T.ModifiedDate AS ProductModel_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.ProductModels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ProductModelProductDescription.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductModelProductDescription
        [CodeFirstDatabaseSchema.ProductModelProductDescription](T1.ProductModelProductDescription_ProductModelID, T1.ProductModelProductDescription_ProductDescriptionID, T1.ProductModelProductDescription_Culture, T1.ProductModelProductDescription_rowguid, T1.ProductModelProductDescription_ModifiedDate)
    FROM (
        SELECT 
            T.ProductModelID AS ProductModelProductDescription_ProductModelID, 
            T.ProductDescriptionID AS ProductModelProductDescription_ProductDescriptionID, 
            T.Culture AS ProductModelProductDescription_Culture, 
            T.rowguid AS ProductModelProductDescription_rowguid, 
            T.ModifiedDate AS ProductModelProductDescription_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.ProductModelProductDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ProductDescription.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductDescription
        [CodeFirstDatabaseSchema.ProductDescription](T1.ProductDescription_ProductDescriptionID, T1.ProductDescription_Description, T1.ProductDescription_rowguid, T1.ProductDescription_ModifiedDate)
    FROM (
        SELECT 
            T.ProductDescriptionID AS ProductDescription_ProductDescriptionID, 
            T.Description AS ProductDescription_Description, 
            T.rowguid AS ProductDescription_rowguid, 
            T.ModifiedDate AS ProductDescription_ModifiedDate, 
            True AS _from0
        FROM AdventureWorksLt2012.ProductDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.Addresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Addresses
        [DataLayer.GeneratedEf.Address](T1.Address_AddressID, T1.Address_AddressLine1, T1.Address_AddressLine2, T1.Address_City, T1.Address_StateProvince, T1.Address_CountryRegion, T1.Address_PostalCode, T1.Address_rowguid, T1.Address_ModifiedDate)
    FROM (
        SELECT 
            T.AddressID AS Address_AddressID, 
            T.AddressLine1 AS Address_AddressLine1, 
            T.AddressLine2 AS Address_AddressLine2, 
            T.City AS Address_City, 
            T.StateProvince AS Address_StateProvince, 
            T.CountryRegion AS Address_CountryRegion, 
            T.PostalCode AS Address_PostalCode, 
            T.rowguid AS Address_rowguid, 
            T.ModifiedDate AS Address_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.Address AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.CustomerAddresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerAddresses
        [DataLayer.GeneratedEf.CustomerAddress](T1.CustomerAddress_CustomerID, T1.CustomerAddress_AddressID, T1.CustomerAddress_AddressType, T1.CustomerAddress_rowguid, T1.CustomerAddress_ModifiedDate)
    FROM (
        SELECT 
            T.CustomerID AS CustomerAddress_CustomerID, 
            T.AddressID AS CustomerAddress_AddressID, 
            T.AddressType AS CustomerAddress_AddressType, 
            T.rowguid AS CustomerAddress_rowguid, 
            T.ModifiedDate AS CustomerAddress_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.CustomerAddress AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [DataLayer.GeneratedEf.Customer](T1.Customer_CustomerID, T1.Customer_NameStyle, T1.Customer_Title, T1.Customer_FirstName, T1.Customer_MiddleName, T1.Customer_LastName, T1.Customer_Suffix, T1.Customer_CompanyName, T1.Customer_SalesPerson, T1.Customer_EmailAddress, T1.Customer_Phone, T1.Customer_PasswordHash, T1.Customer_PasswordSalt, T1.Customer_rowguid, T1.Customer_ModifiedDate)
    FROM (
        SELECT 
            T.CustomerID AS Customer_CustomerID, 
            T.NameStyle AS Customer_NameStyle, 
            T.Title AS Customer_Title, 
            T.FirstName AS Customer_FirstName, 
            T.MiddleName AS Customer_MiddleName, 
            T.LastName AS Customer_LastName, 
            T.Suffix AS Customer_Suffix, 
            T.CompanyName AS Customer_CompanyName, 
            T.SalesPerson AS Customer_SalesPerson, 
            T.EmailAddress AS Customer_EmailAddress, 
            T.Phone AS Customer_Phone, 
            T.PasswordHash AS Customer_PasswordHash, 
            T.PasswordSalt AS Customer_PasswordSalt, 
            T.rowguid AS Customer_rowguid, 
            T.ModifiedDate AS Customer_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.Customer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.SalesOrderHeaders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SalesOrderHeaders
        [DataLayer.GeneratedEf.SalesOrderHeader](T1.SalesOrderHeader_SalesOrderID, T1.SalesOrderHeader_RevisionNumber, T1.SalesOrderHeader_OrderDate, T1.SalesOrderHeader_DueDate, T1.SalesOrderHeader_ShipDate, T1.SalesOrderHeader_Status, T1.SalesOrderHeader_OnlineOrderFlag, T1.SalesOrderHeader_SalesOrderNumber, T1.SalesOrderHeader_PurchaseOrderNumber, T1.SalesOrderHeader_AccountNumber, T1.SalesOrderHeader_CustomerID, T1.SalesOrderHeader_ShipToAddressID, T1.SalesOrderHeader_BillToAddressID, T1.SalesOrderHeader_ShipMethod, T1.SalesOrderHeader_CreditCardApprovalCode, T1.SalesOrderHeader_SubTotal, T1.SalesOrderHeader_TaxAmt, T1.SalesOrderHeader_Freight, T1.SalesOrderHeader_TotalDue, T1.SalesOrderHeader_Comment, T1.SalesOrderHeader_rowguid, T1.SalesOrderHeader_ModifiedDate)
    FROM (
        SELECT 
            T.SalesOrderID AS SalesOrderHeader_SalesOrderID, 
            T.RevisionNumber AS SalesOrderHeader_RevisionNumber, 
            T.OrderDate AS SalesOrderHeader_OrderDate, 
            T.DueDate AS SalesOrderHeader_DueDate, 
            T.ShipDate AS SalesOrderHeader_ShipDate, 
            T.Status AS SalesOrderHeader_Status, 
            T.OnlineOrderFlag AS SalesOrderHeader_OnlineOrderFlag, 
            T.SalesOrderNumber AS SalesOrderHeader_SalesOrderNumber, 
            T.PurchaseOrderNumber AS SalesOrderHeader_PurchaseOrderNumber, 
            T.AccountNumber AS SalesOrderHeader_AccountNumber, 
            T.CustomerID AS SalesOrderHeader_CustomerID, 
            T.ShipToAddressID AS SalesOrderHeader_ShipToAddressID, 
            T.BillToAddressID AS SalesOrderHeader_BillToAddressID, 
            T.ShipMethod AS SalesOrderHeader_ShipMethod, 
            T.CreditCardApprovalCode AS SalesOrderHeader_CreditCardApprovalCode, 
            T.SubTotal AS SalesOrderHeader_SubTotal, 
            T.TaxAmt AS SalesOrderHeader_TaxAmt, 
            T.Freight AS SalesOrderHeader_Freight, 
            T.TotalDue AS SalesOrderHeader_TotalDue, 
            T.Comment AS SalesOrderHeader_Comment, 
            T.rowguid AS SalesOrderHeader_rowguid, 
            T.ModifiedDate AS SalesOrderHeader_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.SalesOrderHeader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.SalesOrderDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing SalesOrderDetails
        [DataLayer.GeneratedEf.SalesOrderDetail](T1.SalesOrderDetail_SalesOrderID, T1.SalesOrderDetail_SalesOrderDetailID, T1.SalesOrderDetail_OrderQty, T1.SalesOrderDetail_ProductID, T1.SalesOrderDetail_UnitPrice, T1.SalesOrderDetail_UnitPriceDiscount, T1.SalesOrderDetail_LineTotal, T1.SalesOrderDetail_rowguid, T1.SalesOrderDetail_ModifiedDate)
    FROM (
        SELECT 
            T.SalesOrderID AS SalesOrderDetail_SalesOrderID, 
            T.SalesOrderDetailID AS SalesOrderDetail_SalesOrderDetailID, 
            T.OrderQty AS SalesOrderDetail_OrderQty, 
            T.ProductID AS SalesOrderDetail_ProductID, 
            T.UnitPrice AS SalesOrderDetail_UnitPrice, 
            T.UnitPriceDiscount AS SalesOrderDetail_UnitPriceDiscount, 
            T.LineTotal AS SalesOrderDetail_LineTotal, 
            T.rowguid AS SalesOrderDetail_rowguid, 
            T.ModifiedDate AS SalesOrderDetail_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.SalesOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.Products.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Products
        [DataLayer.GeneratedEf.Product](T1.Product_ProductID, T1.Product_Name, T1.Product_ProductNumber, T1.Product_Color, T1.Product_StandardCost, T1.Product_ListPrice, T1.Product_Size, T1.Product_Weight, T1.Product_ProductCategoryID, T1.Product_ProductModelID, T1.Product_SellStartDate, T1.Product_SellEndDate, T1.Product_DiscontinuedDate, T1.Product_ThumbNailPhoto, T1.Product_ThumbnailPhotoFileName, T1.Product_rowguid, T1.Product_ModifiedDate)
    FROM (
        SELECT 
            T.ProductID AS Product_ProductID, 
            T.Name AS Product_Name, 
            T.ProductNumber AS Product_ProductNumber, 
            T.Color AS Product_Color, 
            T.StandardCost AS Product_StandardCost, 
            T.ListPrice AS Product_ListPrice, 
            T.Size AS Product_Size, 
            T.Weight AS Product_Weight, 
            T.ProductCategoryID AS Product_ProductCategoryID, 
            T.ProductModelID AS Product_ProductModelID, 
            T.SellStartDate AS Product_SellStartDate, 
            T.SellEndDate AS Product_SellEndDate, 
            T.DiscontinuedDate AS Product_DiscontinuedDate, 
            T.ThumbNailPhoto AS Product_ThumbNailPhoto, 
            T.ThumbnailPhotoFileName AS Product_ThumbnailPhotoFileName, 
            T.rowguid AS Product_rowguid, 
            T.ModifiedDate AS Product_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.Product AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.ProductCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductCategories
        [DataLayer.GeneratedEf.ProductCategory](T1.ProductCategory_ProductCategoryID, T1.ProductCategory_ParentProductCategoryID, T1.ProductCategory_Name, T1.ProductCategory_rowguid, T1.ProductCategory_ModifiedDate)
    FROM (
        SELECT 
            T.ProductCategoryID AS ProductCategory_ProductCategoryID, 
            T.ParentProductCategoryID AS ProductCategory_ParentProductCategoryID, 
            T.Name AS ProductCategory_Name, 
            T.rowguid AS ProductCategory_rowguid, 
            T.ModifiedDate AS ProductCategory_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.ProductCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.ProductModels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductModels
        [DataLayer.GeneratedEf.ProductModel](T1.ProductModel_ProductModelID, T1.ProductModel_Name, T1.ProductModel_CatalogDescription, T1.ProductModel_rowguid, T1.ProductModel_ModifiedDate)
    FROM (
        SELECT 
            T.ProductModelID AS ProductModel_ProductModelID, 
            T.Name AS ProductModel_Name, 
            T.CatalogDescription AS ProductModel_CatalogDescription, 
            T.rowguid AS ProductModel_rowguid, 
            T.ModifiedDate AS ProductModel_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.ProductModel AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.ProductModelProductDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductModelProductDescriptions
        [DataLayer.GeneratedEf.ProductModelProductDescription](T1.ProductModelProductDescription_ProductModelID, T1.ProductModelProductDescription_ProductDescriptionID, T1.ProductModelProductDescription_Culture, T1.ProductModelProductDescription_rowguid, T1.ProductModelProductDescription_ModifiedDate)
    FROM (
        SELECT 
            T.ProductModelID AS ProductModelProductDescription_ProductModelID, 
            T.ProductDescriptionID AS ProductModelProductDescription_ProductDescriptionID, 
            T.Culture AS ProductModelProductDescription_Culture, 
            T.rowguid AS ProductModelProductDescription_rowguid, 
            T.ModifiedDate AS ProductModelProductDescription_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.ProductModelProductDescription AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.ProductDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductDescriptions
        [DataLayer.GeneratedEf.ProductDescription](T1.ProductDescription_ProductDescriptionID, T1.ProductDescription_Description, T1.ProductDescription_rowguid, T1.ProductDescription_ModifiedDate)
    FROM (
        SELECT 
            T.ProductDescriptionID AS ProductDescription_ProductDescriptionID, 
            T.Description AS ProductDescription_Description, 
            T.rowguid AS ProductDescription_rowguid, 
            T.ModifiedDate AS ProductDescription_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.ProductDescription AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vGetAllCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vGetAllCategory
        [CodeFirstDatabaseSchema.vGetAllCategory](T1.vGetAllCategory_ParentProductCategoryName, T1.vGetAllCategory_ProductCategoryName, T1.vGetAllCategory_ProductCategoryID)
    FROM (
        SELECT 
            T.ParentProductCategoryName AS vGetAllCategory_ParentProductCategoryName, 
            T.ProductCategoryName AS vGetAllCategory_ProductCategoryName, 
            T.ProductCategoryID AS vGetAllCategory_ProductCategoryID, 
            True AS _from0
        FROM AdventureWorksLt2012.vGetAllCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.vGetAllCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vGetAllCategories
        [DataLayer.GeneratedEf.vGetAllCategory](T1.vGetAllCategory_ParentProductCategoryName, T1.vGetAllCategory_ProductCategoryName, T1.vGetAllCategory_ProductCategoryID)
    FROM (
        SELECT 
            T.ParentProductCategoryName AS vGetAllCategory_ParentProductCategoryName, 
            T.ProductCategoryName AS vGetAllCategory_ProductCategoryName, 
            T.ProductCategoryID AS vGetAllCategory_ProductCategoryID, 
            True AS _from0
        FROM CodeFirstDatabase.vGetAllCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vProductAndDescription.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vProductAndDescription
        [CodeFirstDatabaseSchema.vProductAndDescription](T1.vProductAndDescription_ProductID, T1.vProductAndDescription_Name, T1.vProductAndDescription_ProductModel, T1.vProductAndDescription_Culture, T1.vProductAndDescription_Description)
    FROM (
        SELECT 
            T.ProductID AS vProductAndDescription_ProductID, 
            T.Name AS vProductAndDescription_Name, 
            T.ProductModel AS vProductAndDescription_ProductModel, 
            T.Culture AS vProductAndDescription_Culture, 
            T.Description AS vProductAndDescription_Description, 
            True AS _from0
        FROM AdventureWorksLt2012.vProductAndDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.vProductAndDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vProductAndDescriptions
        [DataLayer.GeneratedEf.vProductAndDescription](T1.vProductAndDescription_ProductID, T1.vProductAndDescription_Name, T1.vProductAndDescription_ProductModel, T1.vProductAndDescription_Culture, T1.vProductAndDescription_Description)
    FROM (
        SELECT 
            T.ProductID AS vProductAndDescription_ProductID, 
            T.Name AS vProductAndDescription_Name, 
            T.ProductModel AS vProductAndDescription_ProductModel, 
            T.Culture AS vProductAndDescription_Culture, 
            T.Description AS vProductAndDescription_Description, 
            True AS _from0
        FROM CodeFirstDatabase.vProductAndDescription AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.vProductModelCatalogDescription.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vProductModelCatalogDescription
        [CodeFirstDatabaseSchema.vProductModelCatalogDescription](T1.vProductModelCatalogDescription_ProductModelID, T1.vProductModelCatalogDescription_Name, T1.vProductModelCatalogDescription_rowguid, T1.vProductModelCatalogDescription_ModifiedDate, T1.vProductModelCatalogDescription_Summary, T1.vProductModelCatalogDescription_Manufacturer, T1.vProductModelCatalogDescription_Copyright, T1.vProductModelCatalogDescription_ProductURL, T1.vProductModelCatalogDescription_WarrantyPeriod, T1.vProductModelCatalogDescription_WarrantyDescription, T1.vProductModelCatalogDescription_NoOfYears, T1.vProductModelCatalogDescription_MaintenanceDescription, T1.vProductModelCatalogDescription_Wheel, T1.vProductModelCatalogDescription_Saddle, T1.vProductModelCatalogDescription_Pedal, T1.vProductModelCatalogDescription_BikeFrame, T1.vProductModelCatalogDescription_Crankset, T1.vProductModelCatalogDescription_PictureAngle, T1.vProductModelCatalogDescription_PictureSize, T1.vProductModelCatalogDescription_ProductPhotoID, T1.vProductModelCatalogDescription_Material, T1.vProductModelCatalogDescription_Color, T1.vProductModelCatalogDescription_ProductLine, T1.vProductModelCatalogDescription_Style, T1.vProductModelCatalogDescription_RiderExperience)
    FROM (
        SELECT 
            T.ProductModelID AS vProductModelCatalogDescription_ProductModelID, 
            T.Name AS vProductModelCatalogDescription_Name, 
            T.rowguid AS vProductModelCatalogDescription_rowguid, 
            T.ModifiedDate AS vProductModelCatalogDescription_ModifiedDate, 
            T.Summary AS vProductModelCatalogDescription_Summary, 
            T.Manufacturer AS vProductModelCatalogDescription_Manufacturer, 
            T.Copyright AS vProductModelCatalogDescription_Copyright, 
            T.ProductURL AS vProductModelCatalogDescription_ProductURL, 
            T.WarrantyPeriod AS vProductModelCatalogDescription_WarrantyPeriod, 
            T.WarrantyDescription AS vProductModelCatalogDescription_WarrantyDescription, 
            T.NoOfYears AS vProductModelCatalogDescription_NoOfYears, 
            T.MaintenanceDescription AS vProductModelCatalogDescription_MaintenanceDescription, 
            T.Wheel AS vProductModelCatalogDescription_Wheel, 
            T.Saddle AS vProductModelCatalogDescription_Saddle, 
            T.Pedal AS vProductModelCatalogDescription_Pedal, 
            T.BikeFrame AS vProductModelCatalogDescription_BikeFrame, 
            T.Crankset AS vProductModelCatalogDescription_Crankset, 
            T.PictureAngle AS vProductModelCatalogDescription_PictureAngle, 
            T.PictureSize AS vProductModelCatalogDescription_PictureSize, 
            T.ProductPhotoID AS vProductModelCatalogDescription_ProductPhotoID, 
            T.Material AS vProductModelCatalogDescription_Material, 
            T.Color AS vProductModelCatalogDescription_Color, 
            T.ProductLine AS vProductModelCatalogDescription_ProductLine, 
            T.Style AS vProductModelCatalogDescription_Style, 
            T.RiderExperience AS vProductModelCatalogDescription_RiderExperience, 
            True AS _from0
        FROM AdventureWorksLt2012.vProductModelCatalogDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for AdventureWorksLt2012.vProductModelCatalogDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing vProductModelCatalogDescriptions
        [DataLayer.GeneratedEf.vProductModelCatalogDescription](T1.vProductModelCatalogDescription_ProductModelID, T1.vProductModelCatalogDescription_Name, T1.vProductModelCatalogDescription_rowguid, T1.vProductModelCatalogDescription_ModifiedDate, T1.vProductModelCatalogDescription_Summary, T1.vProductModelCatalogDescription_Manufacturer, T1.vProductModelCatalogDescription_Copyright, T1.vProductModelCatalogDescription_ProductURL, T1.vProductModelCatalogDescription_WarrantyPeriod, T1.vProductModelCatalogDescription_WarrantyDescription, T1.vProductModelCatalogDescription_NoOfYears, T1.vProductModelCatalogDescription_MaintenanceDescription, T1.vProductModelCatalogDescription_Wheel, T1.vProductModelCatalogDescription_Saddle, T1.vProductModelCatalogDescription_Pedal, T1.vProductModelCatalogDescription_BikeFrame, T1.vProductModelCatalogDescription_Crankset, T1.vProductModelCatalogDescription_PictureAngle, T1.vProductModelCatalogDescription_PictureSize, T1.vProductModelCatalogDescription_ProductPhotoID, T1.vProductModelCatalogDescription_Material, T1.vProductModelCatalogDescription_Color, T1.vProductModelCatalogDescription_ProductLine, T1.vProductModelCatalogDescription_Style, T1.vProductModelCatalogDescription_RiderExperience)
    FROM (
        SELECT 
            T.ProductModelID AS vProductModelCatalogDescription_ProductModelID, 
            T.Name AS vProductModelCatalogDescription_Name, 
            T.rowguid AS vProductModelCatalogDescription_rowguid, 
            T.ModifiedDate AS vProductModelCatalogDescription_ModifiedDate, 
            T.Summary AS vProductModelCatalogDescription_Summary, 
            T.Manufacturer AS vProductModelCatalogDescription_Manufacturer, 
            T.Copyright AS vProductModelCatalogDescription_Copyright, 
            T.ProductURL AS vProductModelCatalogDescription_ProductURL, 
            T.WarrantyPeriod AS vProductModelCatalogDescription_WarrantyPeriod, 
            T.WarrantyDescription AS vProductModelCatalogDescription_WarrantyDescription, 
            T.NoOfYears AS vProductModelCatalogDescription_NoOfYears, 
            T.MaintenanceDescription AS vProductModelCatalogDescription_MaintenanceDescription, 
            T.Wheel AS vProductModelCatalogDescription_Wheel, 
            T.Saddle AS vProductModelCatalogDescription_Saddle, 
            T.Pedal AS vProductModelCatalogDescription_Pedal, 
            T.BikeFrame AS vProductModelCatalogDescription_BikeFrame, 
            T.Crankset AS vProductModelCatalogDescription_Crankset, 
            T.PictureAngle AS vProductModelCatalogDescription_PictureAngle, 
            T.PictureSize AS vProductModelCatalogDescription_PictureSize, 
            T.ProductPhotoID AS vProductModelCatalogDescription_ProductPhotoID, 
            T.Material AS vProductModelCatalogDescription_Material, 
            T.Color AS vProductModelCatalogDescription_Color, 
            T.ProductLine AS vProductModelCatalogDescription_ProductLine, 
            T.Style AS vProductModelCatalogDescription_Style, 
            T.RiderExperience AS vProductModelCatalogDescription_RiderExperience, 
            True AS _from0
        FROM CodeFirstDatabase.vProductModelCatalogDescription AS T
    ) AS T1");
        }
    }
}
